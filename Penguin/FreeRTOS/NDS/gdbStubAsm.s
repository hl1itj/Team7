.section ".text"
    .align  4
    .arm

   .global BreakPoint
   .global ICInvalidateAll
   .global DCFlushAll
   .global enable_IRQs
   .global disable_IRQs
   .global getSPSR
   .global setBankedReg
   .global setRegs
   .global getPC
   .global test_func
   .global add
   .global mul
   .global v5T_semantics_asm

@---------------------------------------------------------------------------------
/* Cause a prefetch exception */
BreakPoint:
@---------------------------------------------------------------------------------
    //BKPT
    //BX   LR
    .word 0xE7FFDEFE
    BX LR
/*
@---------------------------------------------------------------------------------
BREAKPOINT:
@---------------------------------------------------------------------------------
    .word 0xE7FFDEFE
*/

@---------------------------------------------------------------------------------
ICInvalidateAll:
@---------------------------------------------------------------------------------
	MOV	R0,	#0
	// Flush Instruction Cache
	MCR	P15, 0, R0, C7, C5, 0
	//MCR	P15, 0, R0, C7, C6, 0
	BX LR

@---------------------------------------------------------------------------------
DCFlushAll:
@---------------------------------------------------------------------------------
	MOV	R1, #0
outer_loop:
	MOV	R0, #0
inner_loop:
	ORR	R2, R1, R0
	MCR	P15, 0, R2, C7, C14, 2
	ADD	R0, R0, #32
	CMP	R0, #0x1000/4
	BNE	inner_loop
	ADD	R1, R1, #0x40000000
	CMP	R1, #0
	BNE	outer_loop
	BX LR

@---------------------------------------------------------------------------------
enable_IRQs:
@---------------------------------------------------------------------------------
	MRS R0, CPSR
	// Enable IRQ & FIQ
	BIC R0, R0, #0xC0
	MSR CPSR, R0

@---------------------------------------------------------------------------------
disable_IRQs:
@---------------------------------------------------------------------------------
	MRS R0, CPSR
	// Disable IRQ & FIQ
	ORR R0, R0, #0xC0
	MSR CPSR, R0

@---------------------------------------------------------------------------------
getSPSR:
@---------------------------------------------------------------------------------
	MRS R0, SPSR
	BX	LR

@---------------------------------------------------------------------------------
setBankedReg:
@---------------------------------------------------------------------------------
	// banked_mode 인자로 넘겨주는 부분 확인
	MRS R2, CPSR
	AND R2, R2, #0xFF
	AND R3, R2, #0xE0
	ORR	R3, R3, #0x1F
	MSR CPSR_c, R3
	MOV	R13, R0
	MOV	R14, R1
	MSR CPSR_c, R2
	BX	LR

@---------------------------------------------------------------------------------
setRegs:
@---------------------------------------------------------------------------------
/*
    LDR R0, =exceptionRegisters
    LDR R1, [R0, #60]
#    SUB R1, R1, #4
    STMFD   SP!, {R1}
    LDMIA   R0, {R1-R12}
    LDR R0, [R0]
    LDMFD   SP!, {PC}
*/

//    LDR SP, =reg_mem
//    LDMIA   SP, {R0-R12, PC}^

    LDR SP, =regMem
    LDMIA	SP, {R0-R12, PC}^
@---------------------------------------------------------------------------------
getPC:
@---------------------------------------------------------------------------------
	MOV	R0,	R15
	BX	LR

@---------------------------------------------------------------------------------
test_func:
@---------------------------------------------------------------------------------
    MOV R0, #0
    MOV R1, #10
loop:
    ADD R0, #1
    SUB R0, #1
    ADD R0, #2
    SUB R0, #1
    CMP R0, R1
    BNE loop
    BX  LR

@---------------------------------------------------------------------------------
v5T_semantics_asm:
@---------------------------------------------------------------------------------
    mrc  p15,0,r0,c0,c0,0
    bx  lr

add:
    MOV R2, #0
    ADD R2, R0, R1
    MOV R0, R2
    BX  LR

mul:
    MOV R2, #1
    MUL R2, R0, R1
    MOV R0, R2
    BX  LR
